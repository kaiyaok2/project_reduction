<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.228" tests="348" errors="0" skipped="0" failures="0">
  <properties>
    <property name="gopherProxySet" value="false"/>
    <property name="socksProxyHost" value="127.0.0.1"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="http.proxyHost" value="127.0.0.1"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/kekaiyao/Desktop/PRs/123/commons-csv/target/test-classes:/Users/kekaiyao/Desktop/PRs/123/commons-csv/target/classes:/Users/kekaiyao/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.0-M2/junit-jupiter-5.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.0-M2/junit-jupiter-api-5.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/kekaiyao/.m2/repository/org/junit/platform/junit-platform-commons/1.11.0-M2/junit-platform-commons-1.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/kekaiyao/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.0-M2/junit-jupiter-params-5.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.0-M2/junit-jupiter-engine-5.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/junit/platform/junit-platform-engine/1.11.0-M2/junit-platform-engine-1.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/kekaiyao/.m2/repository/org/mockito/mockito-core/4.11.0/mockito-core-4.11.0.jar:/Users/kekaiyao/.m2/repository/net/bytebuddy/byte-buddy/1.12.19/byte-buddy-1.12.19.jar:/Users/kekaiyao/.m2/repository/net/bytebuddy/byte-buddy-agent/1.12.19/byte-buddy-agent-1.12.19.jar:/Users/kekaiyao/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/kekaiyao/.m2/repository/commons-io/commons-io/2.16.1/commons-io-2.16.1.jar:/Users/kekaiyao/.m2/repository/commons-codec/commons-codec/1.17.0/commons-codec-1.17.0.jar:/Users/kekaiyao/.m2/repository/org/apache/commons/commons-lang3/3.14.0/commons-lang3-3.14.0.jar:/Users/kekaiyao/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/kekaiyao/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/kekaiyao/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/kekaiyao/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:"/>
    <property name="https.proxyPort" value="10900"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="rat.skip" value="true"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CN"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk@11/11.0.16.1_1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/kekaiyao/Desktop/PRs/123/commons-csv/target/surefire/surefirebooter-20240624220912026_3.jar /Users/kekaiyao/Desktop/PRs/123/commons-csv/target/surefire 2024-06-24T22-09-11_977-jvmRun1 surefire-20240624220912026_1tmp surefire_0-20240624220912026_2tmp"/>
    <property name="http.nonProxyHosts" value="on|*.on|local|*.local|169.254/16|*.169.254/16|10.0/8|*.10.0/8|172.16/12|*.172.16/12|192.168/16|*.192.168/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/kekaiyao/Desktop/PRs/123/commons-csv/target/test-classes:/Users/kekaiyao/Desktop/PRs/123/commons-csv/target/classes:/Users/kekaiyao/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.0-M2/junit-jupiter-5.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.0-M2/junit-jupiter-api-5.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/kekaiyao/.m2/repository/org/junit/platform/junit-platform-commons/1.11.0-M2/junit-platform-commons-1.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/kekaiyao/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.0-M2/junit-jupiter-params-5.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.0-M2/junit-jupiter-engine-5.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/junit/platform/junit-platform-engine/1.11.0-M2/junit-platform-engine-1.11.0-M2.jar:/Users/kekaiyao/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/kekaiyao/.m2/repository/org/mockito/mockito-core/4.11.0/mockito-core-4.11.0.jar:/Users/kekaiyao/.m2/repository/net/bytebuddy/byte-buddy/1.12.19/byte-buddy-1.12.19.jar:/Users/kekaiyao/.m2/repository/net/bytebuddy/byte-buddy-agent/1.12.19/byte-buddy-agent-1.12.19.jar:/Users/kekaiyao/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/kekaiyao/.m2/repository/commons-io/commons-io/2.16.1/commons-io-2.16.1.jar:/Users/kekaiyao/.m2/repository/commons-codec/commons-codec/1.17.0/commons-codec-1.17.0.jar:/Users/kekaiyao/.m2/repository/org/apache/commons/commons-lang3/3.14.0/commons-lang3-3.14.0.jar:/Users/kekaiyao/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/kekaiyao/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/kekaiyao/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/kekaiyao/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/kekaiyao"/>
    <property name="user.language" value="zh"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-08-12"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk@11/11.0.16.1_1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="https.proxyHost" value="127.0.0.1"/>
    <property name="basedir" value="/Users/kekaiyao/Desktop/PRs/123/commons-csv"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="/Users/kekaiyao/Desktop/PRs/123/commons-csv/target/surefire/surefirebooter-20240624220912026_3.jar"/>
    <property name="user.script" value="Hans"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="on|*.on|local|*.local|169.254/16|*.169.254/16|10.0/8|*.10.0/8|172.16/12|*.172.16/12|192.168/16|*.192.168/16"/>
    <property name="java.runtime.version" value="11.0.16.1+0"/>
    <property name="user.name" value="kekaiyao"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="12.3"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/kekaiyao/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/0d/4zk071hd1xx8wrj3n0f4lngh0000gn/T/"/>
    <property name="java.version" value="11.0.16.1"/>
    <property name="user.dir" value="/Users/kekaiyao/Desktop/PRs/123/commons-csv"/>
    <property name="os.arch" value="aarch64"/>
    <property name="socksProxyPort" value="10010"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/Users/kekaiyao/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="11.0.16.1+0"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="java.class.version" value="55.0"/>
    <property name="socksNonProxyHosts" value="on|*.on|local|*.local|169.254/16|*.169.254/16|10.0/8|*.10.0/8|172.16/12|*.172.16/12|192.168/16|*.192.168/16"/>
    <property name="http.proxyPort" value="10900"/>
  </properties>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[1]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.005"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[2]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[3]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[4]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[5]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[6]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[7]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[8]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[9]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[10]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[11]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[12]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[13]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[14]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[15]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[16]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[17]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[18]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[19]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[20]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[21]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[22]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[23]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[24]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[25]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[26]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[27]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[28]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[29]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[30]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[31]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[32]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[33]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[34]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[35]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[36]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[37]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[38]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[39]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[40]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[41]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[42]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[43]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[44]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[45]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[46]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[47]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[48]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[49]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[50]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[51]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[52]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[53]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[54]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[55]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[56]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[57]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[58]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[59]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[60]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[61]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[62]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[63]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[64]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[65]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[66]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[67]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[68]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[69]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[70]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[71]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[72]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[73]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[74]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[75]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[76]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[77]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[78]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[79]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[80]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[81]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[82]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[83]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[84]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[85]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[86]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[87]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[88]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[89]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[90]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[91]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[92]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[93]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[94]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[95]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[96]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[97]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[98]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[99]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[100]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[101]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[102]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[103]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[104]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[105]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[106]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[107]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[108]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[109]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[110]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[111]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[112]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[113]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[114]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[115]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[116]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[117]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[118]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[119]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[120]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[121]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[122]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[123]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[124]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[125]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[126]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[127]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[128]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[129]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[130]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[131]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[132]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[133]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[134]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[135]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[136]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[137]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[138]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[139]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[140]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[141]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[142]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[143]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[144]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[145]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[146]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[147]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[148]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[149]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[150]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[151]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[152]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[153]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[154]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[155]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[156]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[157]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[158]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[159]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[160]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[161]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[162]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[163]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[164]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[165]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[166]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[167]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[168]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[169]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[170]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[171]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[172]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[173]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[174]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[175]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[176]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[177]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[178]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[179]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[180]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[181]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[182]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[183]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[184]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[185]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[186]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[187]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[188]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[189]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[190]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[191]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[192]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[193]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[194]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[195]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[196]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[197]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[198]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[199]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[200]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[201]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[202]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[203]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[204]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[205]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[206]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[207]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[208]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[209]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[210]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[211]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[212]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[213]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[214]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[215]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVFormat(DuplicateHeaderMode, boolean, boolean, String[], boolean)[216]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[1]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.002"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[2]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[3]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[4]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[5]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[6]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[7]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[8]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[9]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[10]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[11]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[12]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[13]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[14]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[15]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[16]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[17]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[18]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[19]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[20]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[21]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[22]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[23]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[24]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[25]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[26]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[27]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[28]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[29]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[30]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[31]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[32]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[33]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[34]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[35]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[36]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[37]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[38]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[39]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[40]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[41]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[42]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[43]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[44]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[45]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[46]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[47]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[48]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[49]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[50]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.002"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[51]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[52]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[53]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[54]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[55]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[56]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[57]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[58]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[59]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[60]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[61]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[62]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[63]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[64]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[65]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[66]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[67]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[68]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[69]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[70]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[71]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[72]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[73]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[74]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[75]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[76]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[77]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[78]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[79]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[80]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[81]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[82]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[83]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[84]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[85]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[86]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[87]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[88]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[89]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[90]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[91]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[92]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[93]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[94]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[95]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[96]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[97]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[98]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[99]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[100]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[101]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[102]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[103]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[104]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[105]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[106]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[107]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[108]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[109]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[110]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[111]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[112]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[113]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[114]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[115]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[116]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[117]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[118]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[119]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[120]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[121]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[122]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[123]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[124]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[125]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[126]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[127]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[128]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[129]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[130]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[131]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.0"/>
  <testcase name="testCSVParser(DuplicateHeaderMode, boolean, boolean, String[], boolean)[132]" classname="org.apache.commons.csv.CSVDuplicateHeaderTest" time="0.001"/>
</testsuite>